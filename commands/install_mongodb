#!/usr/bin/env bash

#
# install_mongodb
#
# Create a secured, single-node MongoDB server


# Set the default arguments
mongodb_port="27017"
mongodb_username=
mongodb_password=

# Keep track of the original arguments passed to this script
original_arguments=()
for param in "$@"; do
  original_arguments+=("$param")
done

# Explain how to use this script
usage(){
	cat <<- EOF

  Usage: install_mongodb [options]

  Options:
    -o, --port <number>                     The port that MongoDB will bind to, and accept incoming connections on
    -u, --username <string>                 The username of the administrative user for MongoDB
    -p, --password <string>                 The username of the administrative user for MongoDB
    -h, --help                              This message

	EOF
}

# If the user asks for help, print out the usage
set -- "${original_arguments[@]}"
while [ "$1" != "" ]; do
  case $1 in
    -h | --help )
      usage
      exit
      ;;
    *)
      shift
      ;;
  esac
done

# Capture the command line arguements from the user
set -- "${original_arguments[@]}"
while [ "$1" != "" ]; do
  case $1 in
    -o | --port )
      shift
      mongodb_port=$1
      shift
      ;;
    -u | --username )
      shift
      mongodb_username=$1
      shift
      ;;
    -p | --password )
      shift
      mongodb_password=$1
      shift
      ;;
    *)
      usage
      exit 1
  esac
done

# Ensure we have the username and password before we proceed
if [ -z $mongodb_username ]; then
  echo "The MongoDB username must be set; use -u or --username"
  exit 1
fi
if [ -z $mongodb_password ]; then
  echo "The MongoDB password must be set; use -u or --username"
  exit 1
fi

# Add the MongoDB repos to yum
cat << EOF | sudo tee -a /etc/yum.repos.d/mongodb-org-3.4.repo
[mongodb-org-3.4]
name=MongoDB Repository
baseurl=https://repo.mongodb.org/yum/redhat/\$releasever/mongodb-org/3.4/x86_64/
gpgcheck=1
enabled=1
gpgkey=https://www.mongodb.org/static/pgp/server-3.4.asc
EOF

# Install MongoDB
sudo yum install -y mongodb-org

# Create a simple, generic configuration for single-node MongoDB
rm -f /etc/mongod.conf
cat << EOF | sudo tee /etc/mongod.conf
# MongoDB configuration for single-node database

systemLog:
  destination: file
  logAppend: true
  path: /var/log/mongodb/mongod.log

storage:
  dbPath: /var/mongodb_database
  journal:
    enabled: true

processManagement:
  fork: true
  pidFilePath: /var/run/mongodb/mongod.pid

net:
  bindIp: `echo $mongodb_host`
  port: `echo $mongodb_port`
EOF
sudo chown mongod:mongod /etc/mongod.conf
sudo chmod 0700 /etc/mongod.conf
# Create the MongoDB data folder
sudo mkdir /var/mongodb_database
sudo chown mongod:mongod /var/mongodb_database
sudo chmod 0700 /var/mongodb_database
# Create the MongoDB log folder
sudo mkdir -p /var/log/mongodb
sudo chown mongod:mongod /var/log/mongodb
sudo chmod 0700 /var/log/mongodb
# Create the MongoDB pid folder
sudo mkdir -p /var/run/mongodb
sudo chown mongod:mongod /var/run/mongodb
sudo chmod 0700 /var/run/mongodb

# Start MongoDB now
sudo service mongod start

# Secure MongoDB with the username and password
cd ~
cat << EOF | sudo tee /home/centos/user_and_pass.js
use admin
db.createUser(
  {
    user: "`echo $mongodb_username`",
    pwd: "`echo $mongodb_username`",
    roles: [ { role: "userAdminAnyDatabase", db: "admin" } ]
  }
)
EOF
/usr/bin/mongo localhost:$mongodb_port < /home/centos/user_and_pass.js
rm -f /home/centos/user_and_pass.js
cat << EOF | sudo tee -a /etc/mongod.conf

security:
  authorization: enabled
EOF
sudo service mongod restart

# N.B. MongoDB will run as the user mongod
